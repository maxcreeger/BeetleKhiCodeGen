//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.01 at 10:07:14 PM CEST 
//


package test.beetlekhi;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the test.beetlekhi package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Loop_QNAME = new QName("", "loop");
    private final static QName _Success_QNAME = new QName("", "success");
    private final static QName _Failure_QNAME = new QName("", "failure");
    private final static QName _Setup_QNAME = new QName("", "setup");
    private final static QName _Timeout_QNAME = new QName("", "timeout");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: test.beetlekhi
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Code }
     * 
     */
    public Code createCode() {
        return new Code();
    }

    /**
     * Create an instance of {@link Methods }
     * 
     */
    public Methods createMethods() {
        return new Methods();
    }

    /**
     * Create an instance of {@link Method }
     * 
     */
    public Method createMethod() {
        return new Method();
    }

    /**
     * Create an instance of {@link Libraries }
     * 
     */
    public Libraries createLibraries() {
        return new Libraries();
    }

    /**
     * Create an instance of {@link Library }
     * 
     */
    public Library createLibrary() {
        return new Library();
    }

    /**
     * Create an instance of {@link StateVariables }
     * 
     */
    public StateVariables createStateVariables() {
        return new StateVariables();
    }

    /**
     * Create an instance of {@link StateVariable }
     * 
     */
    public StateVariable createStateVariable() {
        return new StateVariable();
    }

    /**
     * Create an instance of {@link VariableReference }
     * 
     */
    public VariableReference createVariableReference() {
        return new VariableReference();
    }

    /**
     * Create an instance of {@link Command }
     * 
     */
    public Command createCommand() {
        return new Command();
    }

    /**
     * Create an instance of {@link Attributes }
     * 
     */
    public Attributes createAttributes() {
        return new Attributes();
    }

    /**
     * Create an instance of {@link Attribute }
     * 
     */
    public Attribute createAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link Response }
     * 
     */
    public Response createResponse() {
        return new Response();
    }

    /**
     * Create an instance of {@link Sensors }
     * 
     */
    public Sensors createSensors() {
        return new Sensors();
    }

    /**
     * Create an instance of {@link Sensor }
     * 
     */
    public Sensor createSensor() {
        return new Sensor();
    }

    /**
     * Create an instance of {@link Khimodule }
     * 
     */
    public Khimodule createKhimodule() {
        return new Khimodule();
    }

    /**
     * Create an instance of {@link Communication }
     * 
     */
    public Communication createCommunication() {
        return new Communication();
    }

    /**
     * Create an instance of {@link Commands }
     * 
     */
    public Commands createCommands() {
        return new Commands();
    }

    /**
     * Create an instance of {@link Events }
     * 
     */
    public Events createEvents() {
        return new Events();
    }

    /**
     * Create an instance of {@link Event }
     * 
     */
    public Event createEvent() {
        return new Event();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "loop")
    public JAXBElement<String> createLoop(String value) {
        return new JAXBElement<String>(_Loop_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "success")
    public JAXBElement<String> createSuccess(String value) {
        return new JAXBElement<String>(_Success_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "failure")
    public JAXBElement<String> createFailure(String value) {
        return new JAXBElement<String>(_Failure_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "setup")
    public JAXBElement<String> createSetup(String value) {
        return new JAXBElement<String>(_Setup_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "timeout")
    public JAXBElement<Short> createTimeout(Short value) {
        return new JAXBElement<Short>(_Timeout_QNAME, Short.class, null, value);
    }

}
